# Generated by Django 4.0.4 on 2022-07-25 01:45

from django.db import migrations


def forward(apps, schema_editor):
    Setting = apps.get_model("office", "Setting")
    initial_settings = Setting.objects.filter(setting_type=1, site=1).all()  # MainSettings
    for setting in initial_settings:
        setting.order = setting.order + 1
        setting.save()

    new_setting = Setting.objects.create(
        name="language_style",
        title="Language Style",
        description="Traditional or Contemporary English",
        order=0,
        setting_type=1,
        site=1,
    )

    SettingOption = apps.get_model("office", "SettingOption")

    SettingOption.objects.create(
        order=0,
        name="Contemporary Langauge",
        description="Text in contemporary English according to the 2019 edition of the Book of Common Prayer",
        value="contemporary",
        setting=new_setting,
    )

    SettingOption.objects.create(
        order=1,
        name="Traditional Language",
        description="Text in tradtional, Elizabethan-style English according to the 2022 Traditional Language Edition of the 2019 edition of the Book of Common Prayer",
        value="traditional",
        setting=new_setting,
    )

    our_father = Setting.objects.filter(title="Language Style for Prayers").first()
    if our_father:
        our_father.name = "language_style_for_our_father"
        our_father.title = "Language Style for Kyrie and Our Father"
        our_father.description = "When the overall language style is 'contemporary', both traditional and contemporary language options are available for the Kyrie (Lord have mercy) and the Lord's Prayer. The setting has no effect when the overal language style is set to 'tradtional'."
        our_father.save()


def backward(apps, schema_editor):
    Setting = apps.get_model("office", "Setting")
    Setting.objects.filter(
        name="language_style",
    ).all().delete()

    initial_settings = Setting.objects.filter(setting_type=1, site=1).all()  # MainSettings
    for setting in initial_settings:
        setting.order = setting.order - 1
        setting.save()


class Migration(migrations.Migration):
    dependencies = [
        ("office", "0008_collecttagcategory_collecttype_collecttag_collect"),
    ]

    operations = [
        migrations.RunPython(forward, backward),
    ]
