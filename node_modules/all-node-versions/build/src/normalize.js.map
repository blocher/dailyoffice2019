{"version":3,"sources":["../../src/normalize.js"],"names":["normalizeIndex","index","indexItems","map","normalizeVersion","versions","getAllVersions","majors","getMajors","version","lts","versionA","slice","major","getVersionField","groups","Object","values","getMajorInfo","sort","compareMajor","latest","getLts","ltsVersion","find","getLtsField","undefined","toLowerCase","majorA","majorB"],"mappings":"oGAAA;;AAEA;;;AAGO,KAAMA,CAAAA,cAAc,CAAG,SAAUC,KAAV,CAAiB;AAC7C,KAAMC,CAAAA,UAAU,CAAGD,KAAK,CAACE,GAAN,CAAUC,gBAAV,CAAnB;AACA,KAAMC,CAAAA,QAAQ,CAAGC,cAAc,CAACJ,UAAD,CAA/B;AACA,KAAMK,CAAAA,MAAM,CAAGC,SAAS,CAACN,UAAD,CAAxB;AACA,MAAO,CAAEG,QAAF,CAAYE,MAAZ,CAAP;AACD,CALM,C;;AAOP,KAAMH,CAAAA,gBAAgB,CAAG,SAAU,CAAEK,OAAF,CAAWC,GAAX,CAAV,CAA4B;;AAEnD,KAAMC,CAAAA,QAAQ,CAAGF,OAAO,CAACG,KAAR,CAAc,CAAd,CAAjB;AACA,KAAMC,CAAAA,KAAK,CAAG,kBAASF,QAAT,CAAd;AACA,MAAO,CAAEF,OAAO,CAAEE,QAAX,CAAqBE,KAArB,CAA4BH,GAA5B,CAAP;AACD,CALD;;;AAQA,KAAMJ,CAAAA,cAAc,CAAG,SAAUJ,UAAV,CAAsB;AAC3C,MAAOA,CAAAA,UAAU,CAACC,GAAX,CAAeW,eAAf,CAAP;AACD,CAFD;;AAIA,KAAMA,CAAAA,eAAe,CAAG,SAAU,CAAEL,OAAF,CAAV,CAAuB;AAC7C,MAAOA,CAAAA,OAAP;AACD,CAFD;;;;AAMA,KAAMD,CAAAA,SAAS,CAAG,SAAUN,UAAV,CAAsB;AACtC,KAAMa,CAAAA,MAAM,CAAG,mBAAQb,UAAR,CAAoB,OAApB,CAAf;;AAEA,MAAOc,CAAAA,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsBZ,GAAtB,CAA0Be,YAA1B,EAAwCC,IAAxC,CAA6CC,YAA7C,CAAP;AACD,CAJD;;AAMA,KAAMF,CAAAA,YAAY,CAAG,SAAUb,QAAV,CAAoB;AACvC,KAAM,CAAC,CAAEQ,KAAF,CAASJ,OAAO,CAAEY,MAAlB,CAAD,EAA+BhB,QAArC;AACA,KAAMK,CAAAA,GAAG,CAAGY,MAAM,CAACjB,QAAD,CAAlB;AACA,MAAO,CAAEQ,KAAF,CAASQ,MAAT,CAAiB,GAAGX,GAApB,CAAP;AACD,CAJD;;AAMA,KAAMY,CAAAA,MAAM,CAAG,SAAUjB,QAAV,CAAoB;AACjC,KAAMkB,CAAAA,UAAU,CAAGlB,QAAQ,CAACmB,IAAT,CAAcC,WAAd,CAAnB;;AAEA,GAAIF,UAAU,GAAKG,SAAnB,CAA8B;AAC5B,MAAO,EAAP;AACD;;AAED,KAAMhB,CAAAA,GAAG,CAAGa,UAAU,CAACb,GAAX,CAAeiB,WAAf,EAAZ;AACA,MAAO,CAAEjB,GAAF,CAAP;AACD,CATD;;AAWA,KAAMe,CAAAA,WAAW,CAAG,SAAU,CAAEf,GAAF,CAAV,CAAmB;AACrC,MAAO,OAAOA,CAAAA,GAAP,GAAe,QAAtB;AACD,CAFD;;AAIA,KAAMU,CAAAA,YAAY,CAAG,SAAU,CAAEP,KAAK,CAAEe,MAAT,CAAV,CAA6B,CAAEf,KAAK,CAAEgB,MAAT,CAA7B,CAAgD;AACnE,MAAOD,CAAAA,MAAM,CAAGC,MAAT,CAAkB,CAAlB,CAAsB,CAAC,CAA9B;AACD,CAFD","sourcesContent":["import { major as getMajor } from 'semver'\n\nimport { groupBy } from './group.js'\n\n// Normalize index of versions to a simpler list of versions\nexport const normalizeIndex = function (index) {\n  const indexItems = index.map(normalizeVersion)\n  const versions = getAllVersions(indexItems)\n  const majors = getMajors(indexItems)\n  return { versions, majors }\n}\n\nconst normalizeVersion = function ({ version, lts }) {\n  // Remove the leading `v`\n  const versionA = version.slice(1)\n  const major = getMajor(versionA)\n  return { version: versionA, major, lts }\n}\n\n// Array with all version strings, sorted from most to least recent\nconst getAllVersions = function (indexItems) {\n  return indexItems.map(getVersionField)\n}\n\nconst getVersionField = function ({ version }) {\n  return version\n}\n\n// Array with all major releases latest version, sorted from most to least\n// recent. Includes `lts` name if any.\nconst getMajors = function (indexItems) {\n  const groups = groupBy(indexItems, 'major')\n  // eslint-disable-next-line fp/no-mutating-methods\n  return Object.values(groups).map(getMajorInfo).sort(compareMajor)\n}\n\nconst getMajorInfo = function (versions) {\n  const [{ major, version: latest }] = versions\n  const lts = getLts(versions)\n  return { major, latest, ...lts }\n}\n\nconst getLts = function (versions) {\n  const ltsVersion = versions.find(getLtsField)\n\n  if (ltsVersion === undefined) {\n    return {}\n  }\n\n  const lts = ltsVersion.lts.toLowerCase()\n  return { lts }\n}\n\nconst getLtsField = function ({ lts }) {\n  return typeof lts === 'string'\n}\n\nconst compareMajor = function ({ major: majorA }, { major: majorB }) {\n  return majorA < majorB ? 1 : -1\n}\n"],"file":"src/normalize.js"}