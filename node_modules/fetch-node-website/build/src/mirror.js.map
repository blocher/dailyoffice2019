{"version":3,"sources":["../../src/mirror.js"],"names":["getMirrorEnv","mirrorName","MIRRORS","find","isDefinedEnv","undefined","mirror","env","name","trim"],"mappings":"kGAAA;;;;AAIO,KAAMA,CAAAA,YAAY,CAAG,UAAY;AACtC,KAAMC,CAAAA,UAAU,CAAGC,OAAO,CAACC,IAAR,CAAaC,YAAb,CAAnB;;AAEA,GAAIH,UAAU,GAAKI,SAAnB,CAA8B;AAC5B,MAAO,EAAP;AACD;;AAED,KAAMC,CAAAA,MAAM,CAAGC,aAAIN,UAAJ,CAAf;AACA,MAAO,CAAEK,MAAF,CAAP;AACD,CATM,C;;AAWP,KAAMF,CAAAA,YAAY,CAAG,SAAUI,IAAV,CAAgB;AACnC,MAAOD,cAAIC,IAAJ,IAAcH,SAAd,EAA2BE,aAAIC,IAAJ,EAAUC,IAAV,KAAqB,EAAvD;AACD,CAFD;;AAIA,KAAMP,CAAAA,OAAO,CAAG;AACd,aADc;AAEd,uBAFc;AAGd,eAHc;AAId,oBAJc,CAAhB","sourcesContent":["import { env } from 'process'\n\n// The `mirror` option can be specified using the environment variables used\n// by popular Node.js version managers (nvm, n, nodist)\nexport const getMirrorEnv = function () {\n  const mirrorName = MIRRORS.find(isDefinedEnv)\n\n  if (mirrorName === undefined) {\n    return {}\n  }\n\n  const mirror = env[mirrorName]\n  return { mirror }\n}\n\nconst isDefinedEnv = function (name) {\n  return env[name] !== undefined && env[name].trim() !== ''\n}\n\nconst MIRRORS = [\n  'NODE_MIRROR',\n  'NVM_NODEJS_ORG_MIRROR',\n  'N_NODE_MIRROR',\n  'NODIST_NODE_MIRROR',\n]\n"],"file":"src/mirror.js"}