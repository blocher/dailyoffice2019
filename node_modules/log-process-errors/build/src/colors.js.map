{"version":3,"sources":["../../src/colors.js"],"names":["addChalk","opts","colors","level","getLevel","chalk","Chalk","Instance","Math","max","supportsColor","DEFAULT_COLORS","Boolean"],"mappings":"qHAAA;AACA,6C;;;;AAIO,KAAMA,CAAAA,QAAQ,CAAG,SAAU,CAAEC,IAAF,CAAQA,IAAI,CAAE,CAAEC,MAAF,CAAd,CAAV,CAAsC;AAC5D,KAAMC,CAAAA,KAAK,CAAGC,QAAQ,CAACF,MAAD,CAAtB;AACA,KAAMG,CAAAA,KAAK,CAAG,GAAIC,gBAAMC,QAAV,CAAmB,CAAEJ,KAAF,CAAnB,CAAd;AACA,MAAO,CAAE,GAAGF,IAAL,CAAWI,KAAX,CAAP;AACD,CAJM,C;;AAMP,KAAMD,CAAAA,QAAQ,CAAG,SAAUF,MAAV,CAAkB;AACjC,GAAI,CAACA,MAAL,CAAa;AACX,MAAO,EAAP;AACD;;AAED,MAAOM,CAAAA,IAAI,CAACC,GAAL,CAASC,sBAAcP,KAAvB,CAA8B,CAA9B,CAAP;AACD,CAND;;AAQO,KAAMQ,CAAAA,cAAc,CAAGC,OAAO,CAACF,qBAAD,CAA9B,C","sourcesContent":["import Chalk from 'chalk'\nimport { stdout as supportsColor } from 'supports-color'\n\n// Can disable colors with `opts.colors`.\n// chalk will automatically disable colors if output does not support it.\nexport const addChalk = function ({ opts, opts: { colors } }) {\n  const level = getLevel(colors)\n  const chalk = new Chalk.Instance({ level })\n  return { ...opts, chalk }\n}\n\nconst getLevel = function (colors) {\n  if (!colors) {\n    return 0\n  }\n\n  return Math.max(supportsColor.level, 1)\n}\n\nexport const DEFAULT_COLORS = Boolean(supportsColor)\n"],"file":"src/colors.js"}