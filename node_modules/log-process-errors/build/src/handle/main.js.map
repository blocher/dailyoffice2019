{"version":3,"sources":["../../../src/handle/main.js"],"names":["uncaughtException","context","value","warning","unhandledRejection","promise","rejectionHandled","multipleResolves","type","nextValue","nextRejected","TYPE_TO_REJECTED","resolve","reject"],"mappings":"oMAAA;;;;AAIO,KAAMA,CAAAA,iBAAiB,CAAG,SAAUC,OAAV,CAAmBC,KAAnB,CAA0B;AACzD,wBAAY,CAAE,GAAGD,OAAL,CAAcC,KAAd,CAAZ;AACD,CAFM,C;;AAIA,KAAMC,CAAAA,OAAO,CAAG,SAAUF,OAAV,CAAmBC,KAAnB,CAA0B;AAC/C,wBAAY,CAAE,GAAGD,OAAL,CAAcC,KAAd,CAAZ;AACD,CAFM,C;;AAIA,KAAME,CAAAA,kBAAkB,CAAG,SAAUH,OAAV,CAAmBC,KAAnB,CAA0BG,OAA1B,CAAmC;AACnE,wBAAY,CAAE,GAAGJ,OAAL,CAAcI,OAAd,CAAuBH,KAAvB,CAAZ;AACD,CAFM,C;;AAIA,KAAMI,CAAAA,gBAAgB,CAAG,SAAUL,OAAV,CAAmBI,OAAnB,CAA4B;AAC1D,wBAAY,CAAE,GAAGJ,OAAL,CAAcI,OAAd,CAAZ;AACD,CAFM,C;;;AAKA,KAAME,CAAAA,gBAAgB,CAAG,SAAUN,OAAV,CAAmBO,IAAnB,CAAyBH,OAAzB,CAAkCI,SAAlC,CAA6C;AAC3E,KAAMC,CAAAA,YAAY,CAAGC,gBAAgB,CAACH,IAAD,CAArC;AACA,wBAAY,CAAE,GAAGP,OAAL,CAAcI,OAAd,CAAuBK,YAAvB,CAAqCD,SAArC,CAAZ;AACD,CAHM,C;;AAKP,KAAME,CAAAA,gBAAgB,CAAG;AACvBC,OAAO,CAAE,KADc;AAEvBC,MAAM,CAAE,IAFe,CAAzB","sourcesContent":["import { handleEvent } from './common.js'\n\n// List of all handled events\n// Each event must pass its related `value` to the generic `handleEvent()`\nexport const uncaughtException = function (context, value) {\n  handleEvent({ ...context, value })\n}\n\nexport const warning = function (context, value) {\n  handleEvent({ ...context, value })\n}\n\nexport const unhandledRejection = function (context, value, promise) {\n  handleEvent({ ...context, promise, value })\n}\n\nexport const rejectionHandled = function (context, promise) {\n  handleEvent({ ...context, promise })\n}\n\n// eslint-disable-next-line max-params\nexport const multipleResolves = function (context, type, promise, nextValue) {\n  const nextRejected = TYPE_TO_REJECTED[type]\n  handleEvent({ ...context, promise, nextRejected, nextValue })\n}\n\nconst TYPE_TO_REJECTED = {\n  resolve: false,\n  reject: true,\n}\n"],"file":"src/handle/main.js"}