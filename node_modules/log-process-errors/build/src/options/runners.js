"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RUNNERS=void 0;var _process=require("process");function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap;_getRequireWildcardCache=function(){return cache};return cache}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}



const throwUncaughtException=function(error){
(0,_process.nextTick)(()=>{
throw error;
});
};



const tapeFailingTest=async function(error){

const tape=await Promise.resolve().then(()=>_interopRequireWildcard(require("tape")));
tape.test(error.message,t=>{
t.plan(1);
t.error(error);
});
};


const COMMON_OPTIONS={
log:throwUncaughtException,

colors:false,

exitOn:[],


level:{
uncaughtException:"silent",
unhandledRejection:"silent",
multipleResolves:"silent"}};



const RUNNERS={
ava:COMMON_OPTIONS,

mocha:{...COMMON_OPTIONS,level:{uncaughtException:"silent"}},
jasmine:COMMON_OPTIONS,

tape:{...COMMON_OPTIONS,level:{},log:tapeFailingTest},
"node-tap":COMMON_OPTIONS};exports.RUNNERS=RUNNERS;
//# sourceMappingURL=runners.js.map