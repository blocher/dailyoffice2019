var analyticsUtilCookie = (function (exports) {
  'use strict';

  /*
  // set
  cookie('test', 'a')

  // complex set - cookie(name, value, ttl, path, domain, secure)
  cookie('test', 'a', 60*60*24, '/api', '*.example.com', true)

  // get
  cookie('test')

  // destroy
  cookie('test', '', -1)
  */
  function cookie(name, value, ttl, path, domain, secure) {
    if (typeof window === 'undefined') return;
    /* Set values */

    if (arguments.length > 1) {
      // eslint-disable-next-line no-return-assign
      return document.cookie = name + '=' + encodeURIComponent(value) + ( // eslint-disable-next-line operator-linebreak
      !ttl ? '' : // Has TTL set expiration on cookie
      '; expires=' + new Date(+new Date() + ttl * 1000).toUTCString() + ( // If path set path
      !path ? '' : '; path=' + path) + ( // If domain set domain
      !domain ? '' : '; domain=' + domain) + ( // If secure set secure
      !secure ? '' : '; secure'));
    }

    return decodeURIComponent((('; ' + document.cookie).split('; ' + name + '=')[1] || '').split(';')[0]);
  }

  function hasCookieSupport() {
    try {
      var key = '_c_'; // Try to set cookie

      cookie(key, '1');
      var valueSet = document.cookie.indexOf(key) !== -1; // Cleanup cookie

      cookie(key, '', -1);
      return valueSet;
    } catch (e) {
      return false;
    }
  }

  /**
   * Get a cookie value
   * @param  {string} name - key of cookie
   * @return {string} value of cookie
   */

  var getCookie = cookie;
  /**
   * Set a cookie value
   * @param {string} name  - key of cookie
   * @param {string} value - value of cookie
   * @param {string} days  - days to keep cookie
   */

  var setCookie = cookie;
  /**
   * Remove a cookie value.
   * @param {string} name  - key of cookie
   */

  function removeCookie(name) {
    return cookie(name, '', -1);
  }

  exports.hasCookieSupport = hasCookieSupport;
  exports.setCookie = setCookie;
  exports.getCookie = getCookie;
  exports.removeCookie = removeCookie;

  return exports;

}({}));
